.data

IntArray:

    .byte 1, 1, 2, 3
    
    
OutputMessage:
    .string "Here is your result: " # Size of this string: 21
    
    
.bss

    .lcomm Result, 8



.text

.global main
main: 
    
movq $0, %r8 # Desired array location -> IntArray[0]

movq $0, %rbp # Initializing result


movq $IntArray, %r10 # Getting access to the beginning of the array


IncrementLoop:

cmpb $0x03, %r8b

jg Label


    addq (%r10, %r8, 1), %rbp # Accessing array element, putting result into rbp
    
    incq %r8


jmp IncrementLoop

Label:





addq $0x30, %rbp

movq %rbp, Result




  movq $4, %rax # Calls sys_write    
	movq $1, %rbx # Tells sys_write to write output to standard output ($1 = stdout)
	movq $OutputMessage, %rcx # Puts  in the argument of sys_write for what to output
	movq $21, %rdx # Length of string message to be written to standard output
	int $0x80 # System interrupt



  movq $4, %rax # Calls sys_write    
	movq $1, %rbx # Tells sys_write to write output to standard output ($1 = stdout)
	movq $Result, %rcx # Puts  in the argument of sys_write for what to output
	movq $1, %rdx # Length of string message to be written to standard output
	int $0x80 # System interrupt
	
ret
